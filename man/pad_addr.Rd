% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pad_addr.R
\name{pad_addr}
\alias{pad_addr}
\title{NYC DCP PAD address match on a data frame of NYC addresses.}
\usage{
pad_addr(in_df, new_addr_col_name, addr_col_name, third_col_name, 
    third_col_type, return_type = "all")
}
\arguments{
\item{in_df}{a data frame containing NYC addresses.  Required.}

\item{new_addr_col_name}{the name of the output addresses column as string.  Required.}

\item{addr_col_name}{the name of the input addresses column as string.  Required.}

\item{third_col_name}{the name of either the borough code or zip code column as string.  Required.}

\item{third_col_type}{either \code{"boro_code"} or \code{"zip_code"} as string.  Required.}

\item{return_type}{option to exclude address which failed to match from output as string.  Optional.}
}
\value{
A data frame containing the input data frame plus the PAD address column.
}
\description{
The \code{pad_addr} function performs a substring match between a data frame of NYC addresses and NYC Department of City Planning's (DCP) PAD (Property Address Directory) and returns the PAD address, if available.
}
\examples{
# create a data frame of addresses
ADDR <- c("80 CENTRE","125 WORTH S","42 09 28 S","253 BROADW",
    "620 ATLANT","125 WOR","1 FRANKLIN","1 FRANKLIN",
    "1 1 1 AVE","1 1 1 AVE")
BORO_CODE <- c(1,1,4,1,3,1,3,3,1,1)
ZIP_CODE <- c('10013','10013','11101','10007','11217','10013',
    '11222','11249','10003','10014')
u_id <- 1:length(ADDR)
df = data.frame(u_id, ADDR, BORO_CODE, ZIP_CODE)

#get PAD address using borough code
df1 <- pad_addr(df,"ADDR.pad","ADDR","BORO_CODE","boro_code")

#get PAD address using zip code
df2 <- pad_addr(df,"ADDR.pad","ADDR","ZIP_CODE","zip_code")
}
