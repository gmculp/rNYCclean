% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel.splchk_addr.R
\name{parallel.splchk_addr}
\alias{parallel.splchk_addr}
\title{Spell check an extremely large data frame of NYC addresses.}
\usage{
parallel.splchk_addr(in_clus, in_df, new_addr_col_name, addr_col_name,
  third_col_name, third_col_type)
}
\arguments{
\item{in_clus}{the number of clusters available to the function as integer.  Required.}

\item{in_df}{a data frame containing NYC addresses.  Required.}

\item{new_addr_col_name}{the name of output addresses column as string.  Required.}

\item{addr_col_name}{the name of the input addresses column as string.  Required.}

\item{third_col_name}{the name of either the borough code or zip code column as string.  Required.}

\item{third_col_type}{either \code{"boro_code"} or \code{"zip_code"} as string.  Required.}
}
\value{
A data frame containing the input data frame plus the spell checked address column.
}
\description{
The \code{parallel.splchk_addr} function is a more efficient way to perform a spell check on a large data frame of NYC addresses (+10,000 records) with a street name dictionary built from NYC Department of City Planning's (DCP) PAD (Property Address Directory) and SND (Street Name Dictionary) using parallel processing.
}
\examples{
# create a data frame of addresses
ADDR <- c(paste(1:5000,"BRODWAY"),paste(1:2400,"1 AVNUE"),
    paste(1:3400,"ATLANTAC AVE"),paste(1:3400,"FULTAIN ST"))
BORO_CODE <- ifelse(grepl("ATLANT|FULT",ADDR),3,1)
u_id <- 1:length(ADDR)
df = data.frame(u_id, ADDR, BORO_CODE)

#spell check address column using borough code
df1 <- parallel.splchk_addr(in_clus = 10, in_df = df,   
    new_addr_col_name="ADDR.splchk", addr_col_name="ADDR", 
    third_col_name="BORO_CODE", third_col_type="boro_code")
}
