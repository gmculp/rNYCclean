% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regex_addr.R
\name{regex_addr}
\alias{regex_addr}
\title{String replacement cleaning of a data frame of NYC addresses.}
\usage{
regex_addr(in_df, new_addr_col_name, addr1_col_name,
    addr2_col_name = NULL, boro_col_name = NULL)
}
\arguments{
\item{in_df}{a data frame containing NYC addresses.  Required.}

\item{new_addr_col_name}{the name of output addresses column as string.  Required.}

\item{addr1_col_name}{the name of the input address line one column as string.  Required.}

\item{addr2_col_name}{the name of the input address line two column as string.  Optional.}

\item{boro_col_name}{the name of the borough code column as string.  Optional.}
}
\value{
A data frame containing the input data frame plus the cleaned address column.
}
\description{
The \code{regex_addr} function performs string replacement cleaning on a data frame of NYC addresses with a look-up dataset of locations.  The locations dataset was constructed from NYC Department of City Planning's (DCP) PAD (Property Address Directory) and SND (Street Name Dictionary).
}
\examples{
# create a data frame of addresses
ADDR1 <- c("80 CENTRE S","125 WORTH S","42-09 28 ST",
    "250 BEDFORD PARK BLV","30 LAFAYETTE A","125","233 NOSTR")
ADDR2 <- c("","UNIT 329","1st FLR","SUITE 212B","ROOM 3","WORTH STREET","")
BORO_CODE <- c(rep(1,length(ADDR1)-1),3)
u_id <- 1:length(ADDR1)
df = data.frame(u_id, ADDR1, ADDR2, BORO_CODE)

#one address input column with borough code
df1 <- regex_addr(in_df = df, 
    new_addr_col_name = "regex.ADDR", addr1_col_name = "ADDR1", 
    boro_col_name = "BORO_CODE")

#two address input column without borough code
df2 <- regex_addr(in_df = df, new_addr_col_name = "regex.ADDR", 
    addr1_col_name = "ADDR1", addr2_col_name = "ADDR2")
}
